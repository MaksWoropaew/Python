# 1. Задайте список. Напишите программу, которая определит, присутствует ли в заданном списке строк некое число.
# 2. Напишите программу, которая определит позицию второго вхождения строки в списке либо сообщит, что её нет.
# 3. Удалите в целочисленном массиве все положительные числа, которые являются палиндромами.

# Дополнения и пояснения:
# 1. В списке строк ['fdg5', 'dfgrd7', '8', fdgdf', 'trr'] пользователь ищет 5. Нужно написать, что число есть в списке. Можете даже подумать, как вывести индекс элемента.
# 2.
# Примеры
# список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
# список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
# список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: -1
# список: ["123", "234", 123, "567"], ищем: "123", ответ: -1
# список: [], ищем: "123", ответ: -1

# 3. Используйте свою функцию из другого модуля

# 4. Дополнительное задание. Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3n + 1.
# Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}

# 5. Дополнительное задание. Проверьте, является ли данный массив (аргумент в функции) возрастающим или убывающим.




def finding_num(st):
    if  st.find("1")  >= 0:
        print("Заданное число присутствует!")
        return True
list = ["slo1", "12gqw", "12", "fol","1"]
flag = 0
for i in list:
    if  finding_num(i) == True:
        flag +=1
        break
if flag == 0:
    print("Число не найдено") 
        
        

primer = ["qwe", "asd", "zxc", "qwe", "ertqwe","asd"] 
text = "asd"
index = primer.index(text)
print(index)
if index >= 0:
    index2 = primer.index(text, index+1)
    if index2 >= 0:
        print(f"Позиция второго вхождения: {index2}")
    else:
        print("Второе вхождение не найдено")
else:
    print("Вхождений не найдено")


